@import "../styleFunctions/functions";

.service-item-outer-wrapper,
.service-item-inner-wrapper {
  @include flex(column);
  @include flexPosition(center, center);
}

.service-item-outer-wrapper {
  @include widthHeight(100%, fit-content);
  //   @include maxWidth(100%);
  max-height: 450px;
  min-height: 59px;
  border-bottom: 0.5px solid var(--Grey-100);
  //   margin-bottom: 10px;
  // @include temporaryOutline(green);
}

.service-item-inner-wrapper {
  //! issues when hiding message text here, inner wrapper shrinks
  position: relative;
  @include widthHeight(780px, auto);
  max-width: 100%;
  cursor: pointer;
  transition: all 0.4s ease-in-out;

  //   @include temporaryOutline(blue);

  .service-item-title-wrapper {
    @include flex(row);
    @include flexPosition(space-between, center);
    @include widthHeight(100%, fit-content);
    margin: 10px 0;
    // @include temporaryOutline(yellow);

    .service-item-title {
      margin: 16px 0 16px 15px;
      font-family: var(--HN-Light);
      font-weight: var(--Light-Weight);
      font-size: var(--Heading-2);
      color: var(--Grey-100);
    }

    .plus,
    .minus {
      width: 16px;
      height: 16px;
      margin-right: 15px;
    }
  } // end title wrapper

  //^ message-wrapper class will dynamically receive the 'hidden' and 'visible' classNames that will remove it from the DOM.
  .message-wrapper {
    @include widthHeight(100%, fit-content);
    // min-width: 500px;
    margin-bottom: 64px;
    transition: all 0.5s ease-in-out;

    // @include temporaryOutline(orange);

    .service-item-message {
      margin-left: 15px;
      font-family: var(--HN-Light);
      font-weight: var(--Light-Weight);
      font-size: var(--Body);
      line-height: 26px;
      color: var(--Black);
      text-align: left;
      transition: all 0.4s ease-in-out;
    }
  } // end message wrapper

  .visible {
    opacity: 1;
    visibility: visible;
    // transform: translateY(0px);
    transition: all 0.4s ease-in-out;
  }

  //^ Utility class for hiding and shrinking the inner wrapper with state. Must not be nested inside inner wrapper
  .hidden {
    //* display none acts as if the element does not exist in the DOM
    height: 0px;
    max-height: 0px;
    opacity: 0;
    margin: 0;
    // visibility: hidden;
    transition: all 0.4s ease-in-out;
  }
} // end inner wrapper

// Begin Mobile Media Queries
@media screen and (max-width: 530px) {
  .service-item-outer-wrapper {
    margin: 8px 0;
    .service-item-inner-wrapper {
      max-height: fit-content;
      .service-item-title-wrapper {
        margin: 8px 0;
        .service-item-title {
          margin: 0 0 0 15px;
          line-height: normal;
        }
      }
    }
  }
}
